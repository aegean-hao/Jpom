(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{534:function(e,a,r){"use strict";r.r(a);var t=r(31),s=Object(t.a)({},(function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"容器化安装-docker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#容器化安装-docker"}},[e._v("#")]),e._v(" 容器化安装（docker）")]),e._v(" "),r("p",[r("RouterLink",{attrs:{to:"/文档/01.安装使用/07.安装docker.html"}},[e._v("安装 docker")])],1),e._v(" "),r("blockquote",[r("p",[e._v("容器化安装仅提供服务端版。由于容器和宿主机环境隔离，而导致插件端的很多功能无法正常使用，因此对插件端容器化意义不大。")])]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("docker pull jpomdocker/jpom\ndocker run -d -p 2122:2122 \\\n\t--name jpom-server \\\n\t-v /etc/localtime:/etc/localtime:ro \\\n\t-v /home/jpom-server/log:/usr/local/jpom-server/log \\\n\t-v /home/jpom-server/data:/usr/local/jpom-server/data \\\n\tjpomdocker/jpom\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br")])]),r("h2",{attrs:{id:"查看jpom服务端镜像是否启动成功"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查看jpom服务端镜像是否启动成功"}},[e._v("#")]),e._v(" 查看Jpom服务端镜像是否启动成功")]),e._v(" "),r("blockquote",[r("p",[e._v("执行后看到有输出，则说明启动成功，此时可通过"),r("code",[e._v("ip:2122")]),e._v("访问服务端")])]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("docker ps\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("h2",{attrs:{id:"查看服务端在宿主机的目录-使用目录挂载创建的容器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查看服务端在宿主机的目录-使用目录挂载创建的容器"}},[e._v("#")]),e._v(" 查看服务端在宿主机的目录（使用目录挂载创建的容器）")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("日志目录：/home/jpom-server/log\n数据目录：/home/jpom-server/data\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br")])]),r("h2",{attrs:{id:"查看服务端在宿主机的目录-使用容器卷创建的容器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查看服务端在宿主机的目录-使用容器卷创建的容器"}},[e._v("#")]),e._v(" 查看服务端在宿主机的目录（使用容器卷创建的容器）")]),e._v(" "),r("blockquote",[r("p",[e._v("执行后找到"),r("code",[e._v("Mountpoint")]),e._v("字段后面的值，即为宿主机上的目录")])]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("docker inspect jpom-server-vol\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("h1",{attrs:{id:"更新jpom版本"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#更新jpom版本"}},[e._v("#")]),e._v(" 更新JPOM版本")]),e._v(" "),r("h2",{attrs:{id:"在jpom项目管理系统中更新-推荐"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#在jpom项目管理系统中更新-推荐"}},[e._v("#")]),e._v(" 在JPOM项目管理系统中更新（推荐）")]),e._v(" "),r("ol",[r("li",[e._v("首先，你要有一个zip包，可以自己手动打包或者下载我们打包好的最新版的包"),r("a",{attrs:{href:"https://gitee.com/dromara/Jpom/attach_files",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://gitee.com/dromara/Jpom/attach_files"),r("OutboundLink")],1),e._v(" "),r("ol",[r("li",[e._v("下载里面包含插件端和服务端端包，您需要解压获取服务端包")])])]),e._v(" "),r("li",[e._v("进入项目管理系统，在右侧的最后找到"),r("code",[e._v("系统管理")]),e._v("--\x3e"),r("code",[e._v("在线升级")]),e._v("--\x3e点击"),r("code",[e._v("选择升级文件")]),e._v("，把你刚才下载好的包上传上去")]),e._v(" "),r("li",[e._v("耐心等待自动更新完成")])]),e._v(" "),r("h2",{attrs:{id:"如果是使用docker的话-还可以去容器卷中替换掉原有的jar包进行更新"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如果是使用docker的话-还可以去容器卷中替换掉原有的jar包进行更新"}},[e._v("#")]),e._v(" 如果是使用Docker的话，还可以去容器卷中替换掉原有的jar包进行更新")]),e._v(" "),r("ol",[r("li",[e._v("同上")]),e._v(" "),r("li",[e._v("打开zip包，找到里面的"),r("code",[e._v("lib")]),e._v("目录，把里面的jar文件提取出来，并且把jar文件上传至服务器")]),e._v(" "),r("li",[e._v("找到Docker容器在宿主机的目录（可执行"),r("code",[e._v("docker inspect jpom-server-vol")]),e._v("命令查看"),r("code",[e._v("Mountpoint")]),e._v("字段的值）")]),e._v(" "),r("li",[e._v("进入宿主机的lib目录，（执行"),r("code",[e._v("cat upgrade.json")]),e._v("，查看"),r("code",[e._v("newJar")]),e._v("来获取当前jar的名称）")]),e._v(" "),r("li",[e._v("把你上传的jar改成和"),r("code",[e._v("newJar")]),e._v("字段同名的值，然后替换掉原来目录里的（如果里面只有一个jar文件，直接改成里面jar文件的名称即可）")]),e._v(" "),r("li",[e._v("重启容器"),r("code",[e._v("docker restart jpom-server")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);