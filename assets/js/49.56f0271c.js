(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{545:function(s,e,a){"use strict";a.r(e);var t=a(31),r=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),a("blockquote",[a("p",[s._v("本文主要介绍：\n如何从零开始使用 Jpom 中的 Docker 管理")]),s._v(" "),a("p",[s._v("文中使用到的依赖环境版本仅供参考，实际使用中请根据业务情况来安装对应的版本")])]),s._v(" "),a("blockquote",[a("p",[s._v("注意：本文采用一键安装同时基于 2.8.8 版本讲解,系统为 ubuntu")])]),s._v(" "),a("h2",{attrs:{id:"需要准备的环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#需要准备的环境"}},[s._v("#")]),s._v(" 需要准备的环境")]),s._v(" "),a("ol",[a("li",[s._v("Jpom 服务端（安装 jpom 需要 java 环境）")]),s._v(" "),a("li",[s._v("一个安装了 docker 的服务器（可以和安装 Jpom 服务端在同一个服务器）")])]),s._v(" "),a("h2",{attrs:{id:"安装服务端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装服务端"}},[s._v("#")]),s._v(" 安装服务端")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 提前创建好文件夹 并且切换到对应到文件夹执行命令\nmkdir -p /home/jpom/server/\napt install -y wget && wget -O install.sh https://dromara.gitee.io/jpom/docs/install.sh && bash install.sh Server jdk\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("img",{attrs:{src:"/images/tutorial/project_dsl_java/install1.png",alt:"install1"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/tutorial/project_dsl_java/install2.png",alt:"install2"}})]),s._v(" "),a("h3",{attrs:{id:"初始化服务端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化服务端"}},[s._v("#")]),s._v(" 初始化服务端")]),s._v(" "),a("h4",{attrs:{id:"添加超级管理账号"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加超级管理账号"}},[s._v("#")]),s._v(" 添加超级管理账号")]),s._v(" "),a("blockquote",[a("p",[s._v("添加一个超级管理员账号，请妥善保管此账号同时请设置安全度较强的密码")])]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/tutorial/project_dsl_java/inits1.png",alt:"install1"}})]),s._v(" "),a("h4",{attrs:{id:"开启账号-mfa"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启账号-mfa"}},[s._v("#")]),s._v(" 开启账号 MFA")]),s._v(" "),a("blockquote",[a("p",[s._v("为了系统安全，强烈建议超级管理员账号开启 MFA 两步验证")])]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/tutorial/project_dsl_java/inits2.png",alt:"install2"}})]),s._v(" "),a("h2",{attrs:{id:"安装-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker"}},[s._v("#")]),s._v(" 安装 docker")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 这里使用了阿里云镜像，可以更新自己业务选择\ncurl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"状态管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态管理"}},[s._v("#")]),s._v(" 状态管理")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 查看状态\nsystemctl status docker\n# 停止\nsystemctl stop docker\n# 启动\nsystemctl start docker\n# 重启\nsystemctl daemon-reload && systemctl restart docker\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"docker-tls-证书-非必须"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-tls-证书-非必须"}},[s._v("#")]),s._v(" Docker TLS 证书 （非必须）")]),s._v(" "),a("blockquote",[a("p",[s._v("如果服务端所在端服务器已经安装 docker 在 2.8.15+ 版本会自动加载本地 docker 到 Jpom 中，这样就可以不用修改任何配置即可使用 jpom 管理本地 docker。即可忽略该步骤")])]),s._v(" "),a("blockquote",[a("p",[s._v("如果 docker 服务全部在内网环境使用可以不配置 TLS 证书,忽略该步骤。如果端口暴露到公网很容易出现被攻击到情况请一定慎重开启端口访问限制")])]),s._v(" "),a("p",[s._v("Jpom 使用 docker http 接口是实现和 docker 通讯和管理，但是默认没有开启任何认证这样使得 docker 极不安全，如果端口暴露到公网还容易出现挖矿情况")]),s._v(" "),a("p",[s._v("所以这里 我们强烈建议您使用 TLS 证书来连接 docker 提升安全性")]),s._v(" "),a("p",[s._v("这里提供一个快速生成证书到脚本示例：（使用中请一定修改脚本内的 IP 或者可能无法使用的情况奥）")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('#!/bin/bash\n#\n# -------------------------------------------------------------\n# 自动创建 Docker TLS 证书\n# wget https://dromara.gitee.io/jpom/script/docker-tls.sh\n# curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun\n# systemctl daemon-reload && systemctl restart docker\n# -------------------------------------------------------------\n# 以下是配置信息\n# --[BEGIN]------------------------------\nNOW_PATH=$(cd `dirname $0`; pwd)"/"\necho "当前目录：${NOW_PATH} 证书文件将保存在此文件夹下"\nread -p "请输入证书使用的 IP 地址或者 HOST: " HOST\n#\necho "您输入的是：${HOST} 证书只能在这个 IP 或者 HOST 下使用,证书密码和输入的一致"\n# --[INIT PARAMETER]------------------------------\nPASSWORD="$HOST"\nCOUNTRY="CN"\nSTATE="$HOST"\nCITY="$HOST"\nORGANIZATION="$HOST"\nORGANIZATIONAL_UNIT="Dev"\nCOMMON_NAME="$HOST"\nEMAIL="$HOST@docker-tls.com"\n# --[END]--\n# Generate CA key\nopenssl genrsa -aes256 -passout "pass:$PASSWORD" -out "ca-key.pem" 4096\n# Generate CA\nopenssl req -new -x509 -days 365 -key "ca-key.pem" -sha256 -out "ca.pem" -passin "pass:$PASSWORD" -subj "/C=$COUNTRY/ST=$STATE/L=$CITY/O=$ORGANIZATION/OU=$ORGANIZATIONAL_UNIT/CN=$COMMON_NAME/emailAddress=$EMAIL"\n# Generate Server key\nopenssl genrsa -out "server-key.pem" 4096\n# Generate Server Certs.\nopenssl req -subj "/CN=$COMMON_NAME" -sha256 -new -key "server-key.pem" -out server.csr\nrm -f extfile.cnf\necho "subjectAltName = DNS.1:$HOST,IP.1:127.0.0.1" >> extfile.cnf\necho "extendedKeyUsage = serverAuth" >> extfile.cnf\nopenssl x509 -req -days 365 -sha256 -in server.csr -passin "pass:$PASSWORD" -CA "ca.pem" -CAkey "ca-key.pem" -CAcreateserial -out "server-cert.pem" -extfile extfile.cnf\n# Generate Client Certs.\nrm -f extfile.cnf\nopenssl genrsa -out "key.pem" 4096\nopenssl req -subj \'/CN=client\' -new -key "key.pem" -out client.csr\necho "extendedKeyUsage = clientAuth" >> extfile.cnf\nopenssl x509 -req -days 365 -sha256 -in client.csr -passin "pass:$PASSWORD" -CA "ca.pem" -CAkey "ca-key.pem" -CAcreateserial -out "cert.pem" -extfile extfile.cnf\nrm -f client.csr server.csr ca.srl extfile.cnf\n\n# check\nif [ -f "${NOW_PATH}key.pem" -a -f "${NOW_PATH}ca.pem" -a -f "${NOW_PATH}ca-key.pem" -a -f "${NOW_PATH}server-cert.pem" -a -f "${NOW_PATH}server-key.pem" ]; then\n\techo "证书生成完成"\n\techo "客户端使用文件：key.pem ca.pem cert.pem"\n\techo "Docker 端使用文件：ca.pem server-cert.pem server-key.pem"\n\techo "Docker 推荐配置内容：-H tcp://0.0.0.0:2375 --tlsverify --tlscacert=${NOW_PATH}ca.pem --tlscert=${NOW_PATH}server-cert.pem --tlskey=${NOW_PATH}server-key.pem"\nelse\n\techo "证书生成不完成,请检查配置和根据错误日志排查"\nfi\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br")])]),a("p",[s._v("同时将生成到证书下载到本地 保存使用")]),s._v(" "),a("p",[s._v("证书示例：")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/tutorial/docker-cli/tls1.png",alt:"install1"}})]),s._v(" "),a("h2",{attrs:{id:"配置-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-docker"}},[s._v("#")]),s._v(" 配置 docker")]),s._v(" "),a("h3",{attrs:{id:"查看-docker-service-路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看-docker-service-路径"}},[s._v("#")]),s._v(" 查看 docker.service 路径")]),s._v(" "),a("p",[s._v("systemctl status docker")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/tutorial/docker-cli/service1.png",alt:"install1"}})]),s._v(" "),a("h3",{attrs:{id:"配置-tcp-tls-非必须"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-tcp-tls-非必须"}},[s._v("#")]),s._v(" 配置 tcp + tls  （非必须）")]),s._v(" "),a("blockquote",[a("p",[s._v("如果服务端所在端服务器已经安装 docker 在 2.8.15+ 版本会自动加载本地 docker 到 Jpom 中，这样就可以不用修改任何配置即可使用 jpom 管理本地 docker。即可忽略该步骤")])]),s._v(" "),a("p",[a("code",[s._v("vim /lib/systemd/system/docker.service")])]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/tutorial/docker-cli/service2.png",alt:"install1"}})]),s._v(" "),a("p",[s._v("ExecStart 需要添加内容")]),s._v(" "),a("p",[a("code",[s._v("--tlsverify --tlscacert=/home/docker/tls-ca/ca.pem --tlscert=/home/docker/tls-ca/server-cert.pem --tlskey=/home/docker/tls-ca/server-key.pem -H tcp://0.0.0.0:2375")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 配置示例\nExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --tlsverify --tlscacert=/home/docker/tls-ca/ca.pem --tlscert=/home/docker/tls-ca/server-cert.pem --tlskey=/home/docker/tls-ca/server-key.pem -H tcp://0.0.0.0:2375\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果不开启 tls 验证配置示例：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 配置示例\nExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock -H tcp://0.0.0.0:2375\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("部分情况需要删除："),a("code",[s._v("-H fd://")])]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/tutorial/docker-cli/service3.png",alt:"install1"}})]),s._v(" "),a("h3",{attrs:{id:"重启-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重启-docker"}},[s._v("#")]),s._v(" 重启 docker")]),s._v(" "),a("blockquote",[a("p",[s._v("配置完成后需要重启 才能生效")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("systemctl daemon-reload && systemctl restart docker\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"添加-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加-docker"}},[s._v("#")]),s._v(" 添加 docker")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/tutorial/docker-cli/add-docker1.png",alt:"install1"}})]),s._v(" "),a("p",[s._v("注意这里 host 为："),a("code",[s._v("tcp://127.0.0.1:2375")]),s._v(" 这里因为连接本地 docker 所有使用 127.0.0.1 实际中请更换")]),s._v(" "),a("p",[s._v("证书为压缩文件，压缩文件需要包含生成证书文件："),a("code",[s._v("key.pem")]),s._v(" "),a("code",[s._v("ca.pem")]),s._v(" "),a("code",[s._v("cert.pem")])]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/tutorial/docker-cli/ca1.png",alt:"install1"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/tutorial/docker-cli/add-docker2.png",alt:"install1"}})]),s._v(" "),a("h2",{attrs:{id:"jpom-中使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jpom-中使用"}},[s._v("#")]),s._v(" Jpom 中使用")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/tutorial/docker-cli/docker-constole.png",alt:"install1"}})]),s._v(" "),a("blockquote",[a("p",[s._v("docker 相关更多正在努力开发中💪 敬请期待")])])])}),[],!1,null,null,null);e.default=r.exports}}]);